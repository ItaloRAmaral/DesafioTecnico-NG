version: '3.9'
services:
  frontend:
    container_name: NG_app_frontend
    build: ./frontend
    ports:
      - 3000:3000
    platform: linux/x86_64 #  para quem tem MAC
    working_dir: /app/frontend
    volumes:
      - ./frontend:/app/frontend
    tty: true
    stdin_open: true
    # command: bash
    # restart: always
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 1m30s
      timeout: 10s
      retries: 3
    networks:
      - virtual_wan_Front-to-Back

  backend:
    container_name: NG_app_backend
    build: ./backend
    ports:
      - 3001:3001
    platform: linux/x86_64 # para o MAC
    working_dir: /app/backend
    volumes:
      - ./backend:/app/backend
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 1m30s
      timeout: 10s
      retries: 3
    tty: true
    stdin_open: true
    # command: bash
    # restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      DB_HOST: db
      JWT_SECRET: secretJWT
    networks:
      - virtual_wan_Front-to-Back
      - virtual_lan_Back-to-DB

  db:
    container_name: NG_app_db
    image: postgres:14.1-alpine
    platform: linux/x86_64 # para o MAC
    ports:
      - '5432:5432'
    restart: 'always'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB_NAME: NG-app
    volumes: 
      - db:/var/lib/postgresql/data
    networks:
      - virtual_lan_Back-to-DB
      - postgres
    cap_add:
      - SYS_NICE
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: leonan@costa.com
      PGADMIN_DEFAULT_PASSWORD: 123456
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - postgres

volumes:
  db:
    driver: local
  pgadmin-data:

networks:
  virtual_wan_Front-to-Back: {}
  virtual_lan_Back-to-DB: {}
  postgres:
    driver: bridge

# As chaves `tty`, `stdin_open` e `command` fazem com que o container fique
# rodando em segundo plano, bem como tornam possível o uso do comando
# `docker attach`, já deixando o terminal atual acoplado ao container, direto
# no bash. Apesar disso, utilizar o attach mais de uma vez irá replicar o
# terminal, portanto é melhor utilizar o comando `docker exec`.

# A renomeação da rede padrão é feita pois caso contrário o nome da rede será
# o nome do diretório onde o arquivo atual se encontra, o que pode dificultar
# a listagem individual.